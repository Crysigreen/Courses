// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineCoursesSubscription.Models;

#nullable disable

namespace Courses.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240926233814_UpdateModelsWithNewProperties12")]
    partial class UpdateModelsWithNewProperties12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineCoursesSubscription.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Основы программирования на C#.",
                            Title = "Введение в C#"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Глубокое погружение в ASP.NET Core.",
                            Title = "Продвинутый ASP.NET Core"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Изучение EF Core и практики использования.",
                            Title = "Глубокое изучение Entity Framework Core"
                        });
                });

            modelBuilder.Entity("OnlineCoursesSubscription.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubscribedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            SubscribedOn = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            SubscribedOn = new DateTime(2023, 10, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            SubscribedOn = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            SubscribedOn = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("OnlineCoursesSubscription.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            Name = "Алиса Иванова"
                        },
                        new
                        {
                            Id = 2,
                            Email = "boris@example.com",
                            Name = "Борис Смирнов"
                        },
                        new
                        {
                            Id = 3,
                            Email = "victor@example.com",
                            Name = "Виктор Петров"
                        });
                });

            modelBuilder.Entity("OnlineCoursesSubscription.Models.Subscription", b =>
                {
                    b.HasOne("OnlineCoursesSubscription.Models.Course", "Course")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCoursesSubscription.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineCoursesSubscription.Models.Course", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("OnlineCoursesSubscription.Models.User", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
